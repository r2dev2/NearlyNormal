{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Distribution.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from 'svelte';\n  import { writable } from 'svelte/store';\n  import { monteCarlo, students, HA, Operator, opString, OpString } from './stats'; \n  import ModelResults from './ModelResults.svelte';\n  import Distribution from './Distribution.svelte';\n\n  const seq = writable([]);\n  let confidence = 95;\n  let h0 = 26;\n  let sop = '>';\n  let n = 5;\n  $: op = OpString[sop];\n  $: ha = new HA(op, parseFloat(h0));\n</script>\n\n<main>\n  <div class=\"input\">\n    <Distribution {seq} {n} />\n    <input class=\"slider\" type=\"range\" min={2} max={60} bind:value={n} />\n    <p>n={n}</p>\n  </div>\n  <div class=\"info-h0\">\n    <div class=\"info\">\n      <div>\n        <h2>Monte Carlo</h2>\n        <ModelResults sim={monteCarlo} seq={$seq} {confidence} {ha} />\n      </div>\n      <div>\n        <h2>Student's t model</h2>\n        <ModelResults sim={students} seq={$seq} {confidence} {ha} />\n      </div>\n    </div>\n    <div class=\"h-picker\">\n      <p>\n        H0: u =\n        <input class=\"h-value\" type=\"text\" bind:value={h0} />\n      </p>\n      <p>\n        HA: u\n        <select bind:value={sop}>\n          {#each Object.values(OpString) as disp}\n            {#if (typeof disp) == 'string'}\n              <option value={disp}>{disp}</option>\n            {/if}\n          {/each}\n        </select>\n        <input class=\"h-value\" type=\"text\" bind:value={h0} />\n      </p>\n      <div class=\"conf-slider\">\n        <label for=\"confidence\">\n          Confidence: <span class=\"num\">{confidence}%</span>\n        </label>\n        <input\n          name=\"confidence\"\n          class=\"slider\"\n          type=\"range\"\n          min={1} max={99} bind:value={confidence} />\n      </div>\n    </div>\n  </div>\n</main>\n\n<style>\n  main {\n    display: flex;\n    flex-direction: row;\n    margin: auto;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  .conf-slider {\n    padding-top: 0.5%;\n    width: 50%;\n    margin: auto;\n  }\n\n  .conf-slider > label {\n    padding-bottom: 2%;\n  }\n\n  .input, .info-h0 {\n    text-align: center;\n  }\n\n  .h-value {\n    width: 4em;\n  }\n\n  .info {\n    width: 100%;\n    display: flex;\n    flex-direciton: row;\n  }\n\n  .info > div {\n    padding-left: 50px;\n    width: 30em;\n  }\n\n  :global(.num) {\n    color: crimson;\n    background-color: #F1F1F1;\n    font-size: 105%;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n\n  .slider {\n    -webkit-appearance: none;\n    width: 100%;\n    height: 15px;\n    border-radius: 5px;  \n    background: #d3d3d3;\n    outline: none;\n    opacity: 0.7;\n    -webkit-transition: .2s;\n    transition: opacity .2s;\n  }\n\n  .slider::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 25px;\n    height: 25px;\n    border-radius: 50%; \n    background: #4CAF50;\n    cursor: pointer;\n  }\n  \n  .slider::-moz-range-thumb {\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    background: #4CAF50;\n    cursor: pointer;\n  }\n</style>\n",
    "<script>\n  import { onMount, onDestroy, tick } from 'svelte';\n  import { writable } from 'svelte/store';\n  import { extractSample, normDist } from './stats';\n\n  export let seq = writable([]); // writable([])\n  export let n = 10;\n\n  let bins = [];\n\n  $: bins = bins.length ? bins : normDist(25, 5, 2);\n  $: groups = bins.filter(e => e.start != null);\n  $: seq.set(extractSample(groups, n));\n  $: maxX = bins[bins.length - 1].end;\n  $: maxVal = Math.max(...groups.map(e => e.amt));\n\n  let onMouseMove = () => { };\n  let target = null;\n  let targetBar = null;\n\n  function handleBarMouseMove(bin) {\n    return e => {\n      if (e.buttons == 1 && target != null) {\n        if (bin.amt == 0) {\n          bin.amt = 1;\n          bins = bins;\n        }\n        const pHeight = parseFloat(getComputedStyle(\n          targetBar\n        ).height);\n        const { top, bottom } = target.getBoundingClientRect();\n        const ogPos = (top + bottom) / 2;\n        const dy = ogPos - e.clientY;\n        const dm = (pHeight + dy) / pHeight;\n        bin.amt *= dm;\n        bin.amt = Math.min(Math.max(bin.amt, 0), 50);\n        bins = bins;\n      }\n    }\n  }\n\n  function onWinMouseUp() {\n    target = null;\n    targetBar = null;\n    onMouseMove = () => { };\n  }\n  onMount(() => window.addEventListener('mouseup', onWinMouseUp));\n  onDestroy(() => window.removeEventListener('mouseup', onWinMouseUp));\n    \n</script>\n\n<svelte:window\n  on:mousedown={e => { target = e.target; targetBar = target.parentElement.querySelector('.bar') }}\n  on:mousemove={e => onMouseMove(e)} />\n\n\n<div class=\"dist\">\n  <div class=\"bins\">\n    {#each groups as bin}\n      <div class=\"bar-container\">\n        <p class=\"bar-label\">{bin.start == null ? bin.end : bin.start}</p>\n        <div class=\"bar\" style=\"height: {bin.amt / 3}em\" />\n        <div\n          class=\"bar-handle\"\n          on:mousedown={(b => onMouseMove = handleBarMouseMove(b))(bin)} />\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .bins {\n    display: flex;\n    flex-direction: row;\n    transform: scaleY(-1);\n    height: 20em;\n  }\n\n  .bar-label {\n    position: relative;\n    transform: scaleY(-1);\n    left: -10px;\n    top: 15px;\n  }\n\n  .bins > :not(last-child) {\n    margin-right: 2px;\n  }\n\n  .bar {\n    width: 2em;\n    min-height: 1px;\n    background-color: crimson;\n  }\n\n  .bar-handle {\n    width: 2em;\n    height: 20px;\n    cursor: n-resize;\n    top: -10px;\n    position: relative;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAgEE,IAAI,8BAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,YAAY,8BAAC,CAAC,AACZ,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,AACd,CAAC,AAED,2BAAY,CAAG,KAAK,eAAC,CAAC,AACpB,cAAc,CAAE,EAAE,AACpB,CAAC,AAED,oCAAM,CAAE,QAAQ,8BAAC,CAAC,AAChB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,QAAQ,8BAAC,CAAC,AACR,KAAK,CAAE,GAAG,AACZ,CAAC,AAED,KAAK,8BAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACrB,CAAC,AAED,oBAAK,CAAG,GAAG,eAAC,CAAC,AACX,YAAY,CAAE,IAAI,CAClB,KAAK,CAAE,IAAI,AACb,CAAC,AAEO,IAAI,AAAE,CAAC,AACb,KAAK,CAAE,OAAO,CACd,gBAAgB,CAAE,OAAO,CACzB,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,8BAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC,AAED,OAAO,8BAAC,CAAC,AACP,kBAAkB,CAAE,IAAI,CACxB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,GAAG,CACZ,kBAAkB,CAAE,GAAG,CACvB,UAAU,CAAE,OAAO,CAAC,GAAG,AACzB,CAAC,AAED,qCAAO,sBAAsB,AAAC,CAAC,AAC7B,kBAAkB,CAAE,IAAI,CACxB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,qCAAO,kBAAkB,AAAC,CAAC,AACzB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,OAAO,AACjB,CAAC;ACvED,KAAK,8BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,SAAS,CAAE,OAAO,EAAE,CAAC,CACrB,MAAM,CAAE,IAAI,AACd,CAAC,AAED,UAAU,8BAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,OAAO,EAAE,CAAC,CACrB,IAAI,CAAE,KAAK,CACX,GAAG,CAAE,IAAI,AACX,CAAC,AAED,oBAAK,gBAAG,KAAK,UAAU,CAAC,AAAC,CAAC,AACxB,YAAY,CAAE,GAAG,AACnB,CAAC,AAED,IAAI,8BAAC,CAAC,AACJ,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,GAAG,CACf,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,WAAW,8BAAC,CAAC,AACX,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,QAAQ,CAChB,GAAG,CAAE,KAAK,CACV,QAAQ,CAAE,QAAQ,AACpB,CAAC"
}